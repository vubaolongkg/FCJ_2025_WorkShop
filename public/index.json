[
{
	"uri": "/1-create-new-aws-account/",
	"title": "Create new AWS account",
	"tags": [],
	"description": "",
	"content": "Content:\n Create an AWS account Add payment method Verify your phone number Select Support Plan Wait for your account to be activated Important Warning  Create an AWS account  Go to the Amazon Web Service homepage page. Select Create an AWS Account in the upper right corner.  Note: If you don\u0026rsquo;t see Create an AWS Account, select Sign In to the Console then select Create a new AWS Account.    Enter email information and AWS account name  Complete information.  Confirm the code sent from the email.  After successful email authentication. You complete the account information.  Complete the account registration documents.   You can choose Personal or Business account  Add payment method  Enter your credit card information and select Verify and Add.  Note: You can choose a different address for your account by selecting Use a new address before Verify and Add.    Verify your phone number  Enter the phone number. Enter the security check code then select Call me now. AWS will contact and verify account opening.  Select Support Plan  In the Select a support plan page, select an effective plan, to compare plans, see Compare AWS Support Plans.  Wait for your account to be activated  After selecting Support plan, the account is usually activated after a few minutes, but the process can take up to 24 hours. You will still be able to log in to your AWS account at this time, the AWS Home page may show a “Complete Sign Up” button during this time, even if you have completed all the steps in the registration section. After receiving an email confirming your account has been activated, you can access all AWS services.  Important The following AWS Identity and Access Management (IAM) actions will reach the end of standard support on July 2023: aws-portal:ModifyAccount and aws-portal:ViewAccount. See the Using fine-grained AWS Billing actions to replace these actions with fine-grained actions so you have access to AWS Billing, AWS Cost Management, and AWS accounts consoles.\nIf you created your AWS account or AWS Organizations Management account before March 6, 2023, the fine-grained actions will be effective starting July 2023. We recommend you to add the fine-grained actions, but not remove your existing permissions with aws-portal or purchase-orders prefixes.\nIf you created your AWS account or AWS Organizations Management account on or after March 6, 2023, the fine-grained actions are effective immediately.\nAWS assigns the following unique identifiers to each AWS account:\n  AWS account ID: A 12-digit number, such as 012345678901, that uniquely identifies an AWS account. Many AWS resources include the account ID in their Amazon Resource Names (ARNs). The account ID portion distinguishes resources in one account from the resources in another account. If you\u0026rsquo;re an AWS Identity and Access Management (IAM) user, you can sign in to the AWS Management Console using either the account ID or account alias. While account IDs, like any identifying information, should be used and shared carefully, they are not considered secret, sensitive, or confidential information.\n  Canonical user ID: An alpha-numeric identifier, such as 79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be, that is an obfuscated form of the AWS account ID. You can use this ID to identify an AWS account when granting cross-account access to buckets and objects using Amazon Simple Storage Service (Amazon S3). You can retrieve the canonical user ID for your AWS account as either the root user or an IAM user.\n  You must be authenticated with AWS to view these identifiers.\nWarning Do not provide your AWS credentials (including passwords and access keys) to a third party that needs your AWS account identifiers to share AWS resources with you. Doing so would give them the same access to the AWS account that you have.\n"
},
{
	"uri": "/",
	"title": "Setting up an AWS account",
	"tags": [],
	"description": "",
	"content": "Creating your first AWS account Overview In this first lab, you will be creating your new AWS account and use Multi-factor Authentication (MFA) to improve your account security. Next, you will create an Administrator Group and Admin User to manage access to resources in your account instead of using the root user. Finally, we will step through account authentication with AWS Support in the event you experience authentication problems.\nAWS Account An AWS account is the basic container for all the AWS resources you can create as an AWS customer. By default, each AWS account will have a root user. The root user has full access within your AWS account, and root user permissions cannot be limited. When you first create your AWS account, you will be assessing it as the root user.\nAs a best practice, do not use the AWS account root user for any task where it\u0026rsquo;s not required. Instead, create a new IAM user for each person that requires administrator access. Thereafter, the users in the administrators user group should set up the user groups, users, and so on, for the AWS account. All future interaction should be through the AWS account\u0026rsquo;s users and their own keys instead of the root user. However, to perform some account and service management tasks, you must log in using the root user credentials.\n\rMulti-Factor Authentication (MFA) MFA adds extra security because it requires users to provide unique authentication from an AWS supported MFA mechanism in addition to their regular sign-in credentials when they access AWS websites or services.\nIAM User Group An IAM user group is a collection of IAM users. User groups let you specify permissions for multiple users, which can make it easier to manage the permissions for those users. Any user in that user group automatically has the permissions that are assigned to the user group.\nIAM User An IAM user is an entity that you create in AWS to represent the person or application that uses it to interact with AWS. A user in AWS consists of a name and credentials. Please note that an IAM user with administrator permissions is not the same thing as the AWS account root user.\nAWS Support AWS Basic Support offers all AWS customers access to our Resource Center, Service Health Dashboard, Product FAQs, Discussion Forums, and Support for Health Checks – at no additional charge. Customers who desire a deeper level of support can subscribe to AWS Support at the Developer, Business, or Enterprise level.\nCustomers who choose AWS Support gain one-on-one, fast-response support from AWS engineers. The service helps customers use AWS\u0026rsquo;s products and features. With pay-by-the-month pricing and unlimited support cases, customers are freed from long-term commitments. Customers with operational issues or technical questions can contact a team of support engineers and receive predictable response times and personalized support.\nMain Content  Creating a new AWS Account Setting up MFA for the AWS Account root user Creating an Administrator Accounts and Groups Getting support for Account Authentication  "
},
{
	"uri": "/1-create-new-aws-account/1.1-find-account-id/",
	"title": "View AWS account identifiers",
	"tags": [],
	"description": "",
	"content": "View AWS account identifiers Finding your account ID as the root user You can find the AWS account ID using either the AWS Management Console or the AWS Command Line Interface (AWS CLI). In the console, the location of the account ID depends on whether you\u0026rsquo;re signed in as the root user or an IAM user. The account ID remains the same whether you\u0026rsquo;re signed in as the root user or an IAM user.\nMinimum Permissions To perform the following steps, you must have at least the following IAM permissions:\n When you sign in as the root user, you don\u0026rsquo;t need any IAM permissions. In the navigation bar on the upper right, choose your account name or number and then choose Security credentials.  Tip: If you don\u0026rsquo;t see the Security credentials option, you might be signed in as a federated user with an IAM role, instead of as an IAM user. In this case, look for the entry Account and the account ID number next to it.\nUnder the Account details section, the account number appears next to AWS account ID.\nFinding Your AWS Account ID as an IAM User Minimum Permissions To perform the following steps, you must have at least the following IAM permission:\n aws-portal:ViewAccount    In the navigation bar on the upper right, choose your user name and then choose Security credentials.\n Tip: If you don\u0026rsquo;t see the Security credentials option, you might be signed in as a federated user with an IAM role, instead of as an IAM user. In this case, look for the entry Account and the account ID number next to it.\n   At the top of the page, under Account details, the account number appears next to AWS account ID.\n  Find the canonical user ID for your AWS account You can find the canonical user ID for your AWS account using the AWS Management Console or the AWS CLI. The canonical user ID for an AWS account is specific to that account. You can retrieve the canonical user ID for your AWS account as the root user, a federated user, or an IAM user.\nFind the canonical ID as the root user or IAM user To find the canonical user ID for your account when signed in to the console as the root user or an IAM user:\nMinimum permissions:\nTo perform the following steps, you must have at least the following IAM permissions:\n When you run the command as the root user, you don\u0026rsquo;t need any IAM permissions. When you sign in as an IAM user, then you must have:  aws-portal:ViewAccount      Sign in to the AWS Management Console as the root user or an IAM user.\n  In the navigation bar on the upper right, choose your account name or number, and then choose \u0026ldquo;Security credentials\u0026rdquo;.\n Tip: If you don\u0026rsquo;t see the \u0026ldquo;Security credentials\u0026rdquo; option, you might be signed in as a federated user with an IAM role, instead of as an IAM user. In this case, look for the entry \u0026ldquo;Account\u0026rdquo; and the account ID number next to it.\n   Under the \u0026ldquo;Account details\u0026rdquo; section, the canonical user ID appears next to \u0026ldquo;Canonical user ID\u0026rdquo;. You can use your canonical user ID to configure Amazon S3 access control lists (ACLs).\n  Find the canonical ID as a federated user with an IAM role To find the canonical ID for your account when signed in to the console as a federated user with an IAM role\nMinimum Permissions You must have permission to list and view an Amazon S3 bucket.\n Sign in to the AWS Management Console as a federated user with an IAM role. In the Amazon S3 console, choose a bucket name to view details about a bucket. Choose the Permissions tab. In the Access control list section, under Bucket owner, the canonical ID for your AWS account appears.  "
},
{
	"uri": "/2-mfa-setup-for-aws-user-root/1-virtual-mfa-device/",
	"title": "Virtual MFA Device",
	"tags": [],
	"description": "",
	"content": "Enabling Multi-Factor Authentication (MFA) on AWS Note: Before proceeding, ensure you are logged in to AWS using the root user.\nEnable Virtual MFA Device through AWS Management Console To enhance the security of your AWS account, you can set up Multi-Factor Authentication (MFA). This adds an extra layer of protection by requiring a second form of verification in addition to your password. Follow these steps to set up and activate a virtual MFA device:\n  Sign in to the AWS Management Console.\n  In the upper right corner of the console, you will see your account name. Click on it and select My Security Credentials.\n  Expand the Multi-factor authentication (MFA) section and select Assign MFA.\n  In the Select MFA Device interface:\n Enter a Device Name. Select MFA Device as the Authenticator App. Select Next.    Install a compatible authenticator app on your smartphone. You can find a list of MFA-compatible apps here.\n  Install the authenticator extension for Google Chrome. Select Add to Chrome.\n  Use the authenticator app to generate an MFA code and enter it for confirmation.\n  Perform a QR code scan using the authenticator app.\n  After scanning the QR code, enter the generated MFA codes into the corresponding fields.\n  Once the codes are entered, select Add MFA to complete the setup.\n  Complete the additional MFA setup steps as prompted.  By setting up Multi-Factor Authentication, you add an extra layer of security to your AWS account, helping to protect your valuable resources and data.\n"
},
{
	"uri": "/2-mfa-setup-for-aws-user-root/",
	"title": "MFA for AWS Accounts",
	"tags": [],
	"description": "",
	"content": "Multi-Factor Authentication (MFA) Setup During the authentication process, you will need to utilize three different MFA devices to ensure the security of your account.\n  Virtual MFA Devices (Smartphone Apps): Install the following apps on your smartphone and set them up for MFA:\n Microsoft Authenticator Google Authenticator Okta Verify    Hard U2F Security Key: Obtain a hard U2F security key to enhance your account\u0026rsquo;s security.\n  Other Hardware MFA Devices (e.g., Gemalto Security Keys): Consider using additional hardware MFA devices for added protection.\n  Content  Content 1. Setup with Virtual MFA Device 2. Setup with U2F Security Key 3. Setup with Other Hardware MFA Device   1. Setup with Virtual MFA Device To set up your virtual MFA device using apps on your smartphone, follow these steps:\n Step 1: Install the Microsoft Authenticator, Google Authenticator, and Okta Verify apps on your smartphone. Step 2: Open the app and follow the on-screen instructions to add your account. Step 3: Use the app-generated codes during the MFA authentication process.   2. Setup with U2F Security Key Setting up your U2F security key involves the following steps:\n Step 1: Obtain a compatible U2F security key. Step 2: Connect the key to your device\u0026rsquo;s USB port. Step 3: During authentication, insert the key and follow the prompts to complete the process.   3. Setup with Other Hardware MFA Device Consider using hardware MFA devices like Gemalto security keys for an extra layer of security:\n Step 1: Acquire a Gemalto security key or a similar hardware device. Step 2: Connect and set up the device as per the manufacturer\u0026rsquo;s instructions. Step 3: Integrate the device into your MFA authentication workflow.   Remember to keep your MFA devices secure and follow best practices to ensure the safety of your account.\n"
},
{
	"uri": "/2-mfa-setup-for-aws-user-root/2-u2f-security-key/",
	"title": "U2F Security Key",
	"tags": [],
	"description": "",
	"content": "Content\n Enable U2F security key via Console  If you do not have a hardware device, you can skip the steps below.\n\rEnable U2F security key via Console U2F Security Key is an open authentication protocol that allows users to access online services with a unique security key without using any software.\n  Sign in to the AWS Console.\n  In the upper right corner, you will see your account name, select and select My Security Credentials then expand Multi-factor authentication (MFA).\n  To manage U2F security keys, you must have permissions from the following set of permissions. in the left sidebar, select Policies then select Create policy, select JSON tab and paste the below:\n  {  \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,  \u0026#34;Statement\u0026#34;: [  {  \u0026#34;Sid\u0026#34;: \u0026#34;AllowManageOwnUserMFA\u0026#34;,  \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,  \u0026#34;Action\u0026#34;: [  \u0026#34;iam:DeactivateMFADevice\u0026#34;,  \u0026#34;iam:EnableMFADevice\u0026#34;,  \u0026#34;iam:GetUser\u0026#34;,  \u0026#34;iam:ListMFADevices\u0026#34;,  \u0026#34;iam:ResyncMFADevice\u0026#34;  ],  \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34;  },  {  \u0026#34;Sid\u0026#34;: \u0026#34;DenyAllExceptListedIfNoMFA\u0026#34;,  \u0026#34;Effect\u0026#34;: \u0026#34;Deny\u0026#34;,  \u0026#34;NotAction\u0026#34;: [  \u0026#34;iam:EnableMFADevice\u0026#34;,  \u0026#34;iam:GetUser\u0026#34;,  \u0026#34;iam:ListMFADevices\u0026#34;,  \u0026#34;iam:ResyncMFADevice\u0026#34;  ],  \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34;,  \u0026#34;Condition\u0026#34;: {  \u0026#34;BoolIfExists\u0026#34;: {  \u0026#34;aws:MultiFactorAuthPresent\u0026#34;: \u0026#34;false\u0026#34;  }  }  }  ] } Select Next: Tags. This is a screen of Tags, a tool used to differentiate AWS resources. Select Next: Review. This is the screen that allows you to review the permission set you are creating. Enter the permission set name (eg MFAHardDevice) and select Create policy.  In the left sidebar, select Dashboard and then select Enable MFA.   Expand Multi-factor authentication (MFA) then select Active MFA.\n  In Manage MFA Device, select U2F security key then press Continue.\n  Plug the U2F security key into the computer\u0026rsquo;s USB port.\n  Click the U2F security key, and then select Close when U2F is successfully set up.  "
},
{
	"uri": "/1-create-new-aws-account/1.2-update-account/",
	"title": "Update the AWS account",
	"tags": [],
	"description": "",
	"content": "Update the AWS account name, email address, or password for the root user Editing AWS Account Information To make changes to your AWS account\u0026rsquo;s name, root user\u0026rsquo;s password, or root user\u0026rsquo;s email address, follow the steps below. Your email address and password serve as credentials for signing in as the AWS account root user.\n Note: Changes made to an AWS account may take up to four hours to propagate across all services.\n Editing Account Name, Root User Password, or Email Address Minimum Permissions: To proceed with the following steps, you need to have at least the following IAM permissions:\n You must log in as the AWS account root user. No additional IAM permissions are required. These steps cannot be performed by an IAM user or role.    Sign in to the AWS Management Console using your AWS account\u0026rsquo;s email address and password.\n  In the upper right corner of the console, click on your account name or account number, then select \u0026ldquo;Account.\u0026rdquo;\n  On the Account page, locate \u0026ldquo;Account settings\u0026rdquo; and click \u0026ldquo;Edit.\u0026rdquo; You will be prompted to re-authenticate for security reasons.\n Note: If the \u0026ldquo;Edit\u0026rdquo; option is not visible, it indicates that you are not logged in as the root user of your AWS account. Account settings cannot be modified while signed in as an IAM user or role.\n   On the \u0026ldquo;Update Account Settings\u0026rdquo; page, choose \u0026ldquo;Edit\u0026rdquo; next to the field you wish to update.\n  For Name: On the \u0026ldquo;Update Your Account Name\u0026rdquo; page, enter the new account name in the \u0026ldquo;New account name\u0026rdquo; field, then click \u0026ldquo;Save changes.\u0026rdquo;\n Note: If you encounter issues modifying the AWS account name, check if there\u0026rsquo;s a Service Control Policy (SCP) within AWS Organizations that restricts access to \u0026ldquo;aws-portal\u0026rdquo; or denies the \u0026ldquo;iam:UpdateAccountName\u0026rdquo; action.\n   For Email: On the \u0026ldquo;Update Your Email Address\u0026rdquo; page, provide the required information for \u0026ldquo;New email address,\u0026rdquo; \u0026ldquo;Confirm new email address,\u0026rdquo; and confirm your current password. Afterward, click \u0026ldquo;Save changes.\u0026rdquo; A verification code will be sent to your new email address from \u0026ldquo;no-reply@verify.signin.aws.\u0026rdquo; On the \u0026ldquo;Verify Your New Email Address\u0026rdquo; page, enter the verification code you received via email, then click \u0026ldquo;Save changes.\u0026rdquo;\n Note: The verification code may take up to 5 minutes to arrive. If you don\u0026rsquo;t find the email in your inbox, remember to check your spam and junk folders.\n   For Password: On the \u0026ldquo;Update Your Password\u0026rdquo; page, fill in the fields for \u0026ldquo;Current password,\u0026rdquo; \u0026ldquo;New password,\u0026rdquo; and \u0026ldquo;Confirm new password.\u0026rdquo; Then, click \u0026ldquo;Save changes.\u0026rdquo; For additional guidance and best practices regarding root user password management, refer to Change the Password for the AWS Account Root User.\n    Once you have completed all the desired changes, select \u0026ldquo;Done.\u0026rdquo;\n  That\u0026rsquo;s it! You\u0026rsquo;ve successfully updated your AWS account information.\n"
},
{
	"uri": "/3-create-admin-user-and-group/",
	"title": "Create Admin Group and Admin User",
	"tags": [],
	"description": "",
	"content": "Creating an Admin Group   Log in to the Control Panel on the AWS Web Service page.\n  Click on your account name at the top right corner and select My Security Credentials.\n Note: If you don\u0026rsquo;t see the My Security Credentials menu, you can click on the search icon and type IAM. Then click on the IAM service to access the IAM management interface.\n   On the left sidebar, choose User Groups, and then select Create Group.\n  Under the Name the group section, enter the Group name (For example: AdminGroup), and scroll down.\n  In the Attach permissions policies section, type AdministratorAccess in the search bar and select it. Finally, click on Create Group.\n  The creation of the admin group is complete.\n  Create Admin User You can use the AWS Management Console to create IAM users.\n  Follow the sign-in procedure appropriate to your user type as described in the topic How to sign in to AWS in the AWS Sign-In User Guide.\n  On the Console Home page, select the IAM service.\n  In the navigation pane, select Users, and then select Add users.\n  On the Specify user details page, under User details, enter the new user\u0026rsquo;s name in the User name field. This will be their sign-in name for AWS.\n Note: User names can be up to 64 letters, digits, and certain characters: plus (+), equal (=), comma (,), period (.), at sign (@), underscore (_), and hyphen (-). User names must be unique within an account, and they are case-sensitive when used in policies or ARNs. However, they are case-insensitive during the sign-in process.\n   Select Provide user access to the AWS Management Console. This generates AWS Management Console sign-in credentials for the new user.\n  You\u0026rsquo;ll be asked whether you\u0026rsquo;re providing console access to a person. It\u0026rsquo;s recommended to create users in IAM Identity Center rather than IAM. To switch to creating the user in IAM Identity Center, select Specify a user in Identity Center.\n If IAM Identity Center is not enabled, this option takes you to the service page in the console to enable it. If IAM Identity Center is enabled, this option takes you to the Specify user details page in IAM Identity Center.  If you cannot use IAM Identity Center, select I want to create an IAM user and continue following this procedure.\n  For Console password, choose one of the following:\n Autogenerated password: The user gets a randomly generated password that adheres to the account password policy. You can view or download the password on the Retrieve password page. Custom password: Assign a password that you enter in the box.  Optionally, select Users must create a new password at next sign-in (recommended) to ensure the user changes their password the first time they sign in.\n  Select Next.\n  On the Set permissions page, choose how to assign permissions for this user:\n Add user to group: Assign the user to one or more groups with existing permissions policies. Copy permissions: Copy permissions from an existing user with similar needs. Attach policies directly: Attach AWS managed or custom policies directly to the user.  It\u0026rsquo;s recommended to attach policies to groups whenever possible.\n  Optionally, set a permissions boundary in the Permissions boundary section. This is an advanced feature that controls maximum permissions.\n  Select Next.\n  Optionally, on the Review and create page, under Tags, you can attach metadata to the user using key-value pairs.\n  Review your choices, and when ready, select Create user.\n  On the Retrieve password page, get the password assigned to the user:\n    Select Show next to the password to view it manually.\n  Select Download .csv to save the user\u0026rsquo;s sign-in credentials as a .csv file.\n  Select Email sign-in instructions to customize and send an email to the user. The email includes their user name and a URL to the account sign-in page:\nUser name\rURL: https://AWS-account-ID-or-alias.signin.aws.amazon.com/console Note: The user\u0026rsquo;s password is not included in the email.\n  If the user also requires access keys, refer to Managing access keys for IAM users.\nLogin to AdminUser  Return to the IAM service, and select Users in the left sidebar. Click on the name of the IAM User you just selected. In the Summary section, select the Security credentials tab. Look at the line Summary: Console sign-in link and copy the link next to it. This is the link you use to log in to the IAM User.  Open an incognito tab of the browser you are using and paste the link into the search bar.  Incognito tab login allows you to log in to AWS with an IAM User without having to log out of the root user in the main tab.\n\rEnter the correct IAM User name and password that you entered in the create IAM User section above. Click sign in.  Congratulations, you have successfully accessed your account as an IAM User AdminUser.  In The next step, we will switch to using IAM Role to improve the security of your account.  Creating Access Key for AWS Root User Minimum Required Permissions To perform the following steps, you need at least the following IAM (Identity and Access Management) permissions:\n  You must log in as the root user of AWS, which does not require any additional IAM permissions. These steps cannot be performed as an IAM user or a role.\n  Use the email address and password of your AWS account to sign in to the AWS Management Console as the root user.\n  In the top-right corner of the console, select your account name or number, then choose \u0026ldquo;Security Credentials\u0026rdquo;.\n  Under \u0026ldquo;Access keys,\u0026rdquo; select \u0026ldquo;Create access key.\u0026rdquo; If this option is unavailable, it means you have the maximum number of access keys. You must delete one of the existing access keys before creating a new one. For more information, see IAM Object Quotas in the IAM User Guide.\n  On the \u0026ldquo;Alternatives to root user access keys\u0026rdquo; page, consider security recommendations. To proceed, check the box and then select \u0026ldquo;Create access key.\u0026rdquo;\n  On the \u0026ldquo;Retrieve access key\u0026rdquo; page, your Access Key ID will be displayed.\n  Under the \u0026ldquo;Secret access key\u0026rdquo; section, select \u0026ldquo;Show,\u0026rdquo; then copy the Access Key ID and Secret Key from your browser window and paste them into a secure location. Alternatively, you can select \u0026ldquo;Download .csv file\u0026rdquo; to download a file named \u0026ldquo;rootkey.csv\u0026rdquo; containing the Access Key ID and Secret Key. Keep the file in a secure location.\n  Select \u0026ldquo;Done.\u0026rdquo; When you no longer need the access key, we recommend either deleting it or at least considering disabling it to prevent misuse.\n   Note: These steps apply only to the root user account on AWS. For IAM users or roles, the process of creating and managing access keys may differ.\n Revoking Access Key for Root User on AWS Minimum Permissions To perform the following steps, you must have at least the following IAM (Identity and Access Management) permissions:\n You must be logged in as the root user of your AWS account, this does not require any additional AWS Identity and Access Management (IAM) permissions. You cannot perform these steps as an IAM user or a role. Use the email address and password of your AWS account to sign in to the AWS Management Console as the root user. In the top-right corner of the console, select your account name or number, then choose Security Credentials. Under Access keys, select the access key you wish to delete, then in the Actions section, choose Delete.   Note Alternatively, you can choose to Deactivate an access key instead of permanently deleting it. This allows you to continue using it in the future without changing both the key ID and secret key. While the key is deactivated, any requests using it in AWS API requests will fail with an \u0026ldquo;access denied\u0026rdquo; error.\nIn the Delete  dialog, select Deactivate, enter the access key ID to confirm your intention to delete it, then choose Delete.\n "
},
{
	"uri": "/1-create-new-aws-account/1.3-aws-account-alias/",
	"title": "Create or update your AWS account alias",
	"tags": [],
	"description": "",
	"content": "Managing AWS Account Aliases for IAM User Sign-In The AWS account root user and AWS Identity and Access Management (IAM) users in the account sign in using a web URL.\nIf you want the URL for your IAM users to contain your company name (or another easy-to-remember identifier) instead of the AWS account ID, you can create an account alias. This section provides information about AWS account aliases and lists the API operations that you can use to create an alias.\nThe sign-in page URL for your account\u0026rsquo;s IAM users has the following format, by default:\nhttps://Your_Account_ID.signin.aws.amazon.com/console/ If you create an AWS account alias for your AWS account ID, the IAM user sign-in page URL looks like the following example:\nhttps://Your_Account_Alias.signin.aws.amazon.com/console/ The original URL containing your AWS account ID remains active and can still be used after you create your AWS account alias.\nTip To create a bookmark for your account sign-in page in your web browser, we recommend that you manually type the sign-in URL in the bookmark entry. Don\u0026rsquo;t use your web browser\u0026rsquo;s \u0026ldquo;bookmark this page\u0026rdquo; feature, as it can capture session-specific information that might interfere with future visits to the page.\nConsiderations  Your AWS account can have only one alias. Creating a new alias will overwrite the previous one, and the URL containing the previous alias will stop working. The account alias must be unique across all Amazon Web Services products. The alias can only contain lowercase letters, digits, and hyphens.  Create or Edit an Account Alias Minimum Permissions To perform the following steps, you must have at least the following IAM permissions:\n iam:ListAccountAliases iam:CreateAccountAlias    Sign in to the AWS Management Console as either the AWS account root user or as an IAM user or role that has the minimum permissions.\n  Open the IAM console at https://console.aws.amazon.com/iam/.\n  In the navigation pane, choose Dashboard.\n  In the right-hand pane under AWS account, next to Account Alias, choose Create. If an alias already exists, then choose Edit.\n  In the dialog box, enter the new or updated name you want to use for your alias, then choose Save changes.\n  Note: You can have only one alias associated with your AWS account at a time. If you create a new alias, the previous alias is removed, and the sign-in URL that was associated with the previous alias stops working.\n Delete an Account Alias Minimum Permissions To perform the following steps, you must have at least the following IAM permissions:\n iam:ListAccountAliases iam:CreateAccountAlias iam:DeleteAccountAlias    Sign in to the AWS Management Console as either the AWS account root user or as an IAM user or role that has the minimum permissions.\n  Open the IAM console at https://console.aws.amazon.com/iam/.\n  In the navigation pane, choose Dashboard.\n  In the right-hand pane under AWS account, next to Account Alias, choose Delete.\n  "
},
{
	"uri": "/2-mfa-setup-for-aws-user-root/3-other-hardware-mfa-device/",
	"title": "Hard MFA Device",
	"tags": [],
	"description": "",
	"content": "Content\n Enable other hardware MFA device through the Console  Enable other hardware MFA device through the Console  Sign in to the AWS Console. In the upper right corner, you will see your account name, select and select My Security Credentials then expand Multi-factor authentication (MFA).  To manage U2F security keys, you must have permissions from the following set of permissions. in the left sidebar, select Policies then select Create policy, select JSON tab and paste the below:  {  \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,  \u0026#34;Statement\u0026#34;: [  {  \u0026#34;Sid\u0026#34;: \u0026#34;AllowManageOwnUserMFA\u0026#34;,  \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,  \u0026#34;Action\u0026#34;: [  \u0026#34;iam:DeactivateMFADevice\u0026#34;,  \u0026#34;iam:EnableMFADevice\u0026#34;,  \u0026#34;iam:GetUser\u0026#34;,  \u0026#34;iam:ListMFADevices\u0026#34;,  \u0026#34;iam:ResyncMFADevice\u0026#34;  ],  \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34;  },  {  \u0026#34;Sid\u0026#34;: \u0026#34;DenyAllExceptListedIfNoMFA\u0026#34;,  \u0026#34;Effect\u0026#34;: \u0026#34;Deny\u0026#34;,  \u0026#34;NotAction\u0026#34;: [  \u0026#34;iam:EnableMFADevice\u0026#34;,  \u0026#34;iam:GetUser\u0026#34;,  \u0026#34;iam:ListMFADevices\u0026#34;,  \u0026#34;iam:ResyncMFADevice\u0026#34;  ],  \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:iam::*:user/${aws:username}\u0026#34;,  \u0026#34;Condition\u0026#34;: {  \u0026#34;BoolIfExists\u0026#34;: {  \u0026#34;aws:MultiFactorAuthPresent\u0026#34;: \u0026#34;false\u0026#34;  }  }  }  ] } Select Next: Tags. This is a screen of Tags, a tool used to differentiate AWS resources. Select Next: Review. This is the screen that allows you to review the permission set you are creating. Enter the permission set name (eg MFAHardDevice) and select Create policy.  In the left sidebar, select Dashboard and then select Enable MFA.   Expand Multi-factor authentication (MFA) then select Active MFA.\n  In Manage MFA Device, select Other Hardware MFA Device then click Continue.\n  Enter Serial Number on the back of the device.\n  Enter MFA code 1 then wait 30 seconds and enter MFA code 2. Select Assign MFA.  "
},
{
	"uri": "/4-verify-new-account/",
	"title": "Account Authentication Support",
	"tags": [],
	"description": "",
	"content": "Content:\n Check the information Create a support case with AWS Support  During the AWS account creation process, at the contact phone number verification step, sometimes there will be a situation where no SMS or calls from AWS will be received. In that case, follow these steps to complete the account information verification:\nCheck the information First, double-check your account information and make sure it\u0026rsquo;s entered correctly:\n You have entered the phone number information and selected the correct international area code to receive the call. If you use a mobile phone, check your phone to make sure you are still within range to receive calls. Payment method information has been entered correctly. Make sure that the phone number you provide in your AWS account is reachable.\n\r  Create a support case with AWS Support After checking that the information is correct but still has not received the verification call, AWS Support will assist you to activate your account manually.\n Go to the AWS Support console, select Create case.  Select Account and billing support and enter the support information:  Type: select Account. Category: select Activation. Subject: briefly write down your situation (eg Did not receive an SMS message or call for verification) Description: Provide details of the situation encountered and information about the time you need support to activate the account. Attachments: Attach an image describing the authentication step you are facing.    Under Contact options, select Chat under Contact methods.  Select Submit.  5. The AWS Support team will contact and assist in activating your account.\nYou can create a support request with AWS Support even if your account is not activated.\n\r"
},
{
	"uri": "/1-create-new-aws-account/1.4-close-account/",
	"title": "Close a standalone AWS account",
	"tags": [],
	"description": "",
	"content": "Close a standalone AWS account Considerations before you close your AWS account Before closing your AWS account, consider the following:\nYour agreement with AWS Closing your AWS account serves as notice to us that you want to cancel the AWS customer agreement or other agreement with AWS that governs your AWS account, solely with respect to this specific AWS account. If you reopen your AWS account during the post-closure period (within 90 days after you close the account), you agree that the same agreement terms govern your access to and use of the service offerings through your reopened AWS account.\nAWS Management Console access Your access to the AWS Management Console for a closed AWS account is restricted. During the post-closure period, you can still sign in to your AWS account to view your past billing information and access AWS Support. You can\u0026rsquo;t access any other AWS services or start any new AWS services in the closed account.\nFind and terminate active resources To prevent unexpected charges, prior to closing your account, we recommended that you first review and terminate all applicable resources currently running in the account.\n Log in to the AWS Management Console. On the navigation pane, choose Services. On the Services page, search for Resource Groups. Under Tag Editor, in Regions, select the regions where you have created resources, or choose All regions. In Resource types, select All supported resource types. Choose Search Resources. If search results appear, then there are still active resources on the account.   Note: AWS Resource Groups search results don\u0026rsquo;t show AWS Marketplace subscriptions. To manage subscriptions, see Managing your software.\n You should archive your content and delete the resources where appropriate. For additional instructions on how to retrieve your content, see the documentation for that service.\nFor more information, see How do I check for active resources that I no longer need on my AWS account?\nExisting content and services still in use after closing After the post-closure period, AWS automatically deletes any remaining content in your AWS account, and attempts to terminate any AWS services that are still in use. For more information about the post-closure period, see Accessing your AWS account after you close it.\nYour payment method We charge you through your designated payment method for any usage fees incurred before you closed your AWS account. We issue you any refunds that might be due through that same payment method. If you have active subscriptions (such as a Reserved Instance that you pay for monthly), even after your account is closed, you might continue to be charged for the subscription through your designated payment method until the subscription expires or is sold according to the terms governing the subscription. These charges and refunds might occur after you close your account.\nIn addition, if you reopen your account, you might be charged for the cost of running AWS services (that you didn\u0026rsquo;t stop before closing your account) during the post-closure period. Closing your AWS account doesn\u0026rsquo;t affect payment methods that you use on Amazon.com or other Amazon websites.\nOn-Demand charges During the post-closure period, billing for On-Demand charges stops. However, you\u0026rsquo;re billed for any usage that has accrued up until the time you closed your account. You\u0026rsquo;ll be charged for that usage at the beginning of the next month. In addition, if you purchased any subscriptions with ongoing payment obligations, you might continue to be charged for them after your account is closed.\n Important: You will continue to generate costs if you don\u0026rsquo;t stop or delete your resources.\n Domains registered with Amazon Route 53 Domains that are registered with Route 53 are not deleted automatically. When you close your AWS account, you have three options:\n  You can disable automatic renewal, and the domains are automatically deleted when the registration period expires. For more information, see Enabling or Disabling Automatic Renewal for a Domain.\n  You can transfer the domains to another AWS account. For more information, see Transferring a Domain to a Different AWS Account.\n  You can transfer the domains to another domain registrar. For more information, see Transferring a Domain from Route 53 to Another Registrar.\n  If you already closed the account, you can open a case with AWS Support to get help with disabling automatic renewal or transferring your domains. For more information, see Contacting AWS Support About Domain Registration Issues. There is no charge to open a case for domain registration issues.\nCharges if you reopen your AWS account If you reopen your AWS account during the post-closure period, you might be billed for the cost of any AWS services that aren\u0026rsquo;t stopped or resources that aren\u0026rsquo;t deleted before you close your account.\n Example: You reopen your AWS account 30 days after closure. Your AWS account had only an active t2.micro Amazon EC2 instance at closure. For this example, imagine that the price for a t2.micro Amazon EC2 instance in your AWS Region is $0.01 per hour. In this case, you might be charged for 30 days x 24 hours x $0.01 per hour = $7.20 for your AWS services.\n Cross-account access to the account you’re closing After you close your AWS account, any access requests to your closed account\u0026rsquo;s AWS services from other AWS accounts fail. This occurs even if you have granted the other accounts permission to access your account\u0026rsquo;s AWS services. If you reopen your AWS account, other AWS accounts can again access your account\u0026rsquo;s AWS services and resources if you granted the necessary permissions to the other AWS accounts.\nRemoving Amazon VPC peering connection AWS doesn\u0026rsquo;t delete Amazon Virtual Private Cloud (Amazon VPC) peering connections when you close one of the accounts participating in the VPC peering connection. Any traffic destined for the VPC peering connection originating from other active accounts is dropped because AWS terminates instances and deletes any security groups in the closed account. To remove the VPC peering connection, delete it from your account using the Amazon VPC console, AWS Command Line Interface (AWS CLI), or Amazon EC2 API. For more information, see Deleting a VPC Peering Connection.\nTroubleshooting errors when closing an AWS account If you receive an error message while trying to close your AWS account, you can contact your account representative or contact AWS Support to open a billing or account support case for assistance. Common reasons why you might not be able to close your AWS account include the following:\n  Your account is the management account of an organization in AWS Organizations with active member accounts. To close the management account, you must first remove all member accounts from the organization.\n  You have unpaid invoices for your account.\n  You are not signed in to the account as the AWS account root user.\n  You are an active AWS Marketplace seller.\n  How to Close Your AWS Account Minimum Permissions To perform the following steps, you must have at least the following IAM permissions:\n You must sign in as the AWS account root user, which requires no additional IAM permissions. You can\u0026rsquo;t perform these steps as an IAM user or role.  Review Considerations before Closing Your AWS Account   Sign in as the root user of the account you want to close, using the email address and password associated with the account. Note that signing in as an AWS Identity and Access Management (IAM) user or role will not allow you to close an account.\n  On the navigation bar in the upper-right corner, select your account name (or alias), and then choose \u0026ldquo;Account.\u0026rdquo;\n  Scroll to the end of the Account page to the \u0026ldquo;Close Account\u0026rdquo; section. Make sure you read and understand the text next to the check boxes. Once you close an AWS account, you will no longer have access to AWS services using that account.\n  Select the check boxes to accept the terms, and then choose \u0026ldquo;Close Account.\u0026rdquo;\n  In the confirmation box, choose \u0026ldquo;Close Account.\u0026rdquo;\n  Accessing Your AWS Account after Closure After closing an AWS account, you will no longer have access to AWS services using that account. However, during the 90-day period following account closure (known as the Post-Closure Period), you can:\n View past billing information for your AWS account. Access AWS Support.  During the Post-Closure Period, AWS may retain any content you didn\u0026rsquo;t delete and any active AWS services. To access remaining content or AWS services, you can reopen your account within the Post-Closure Period.\nReopening Your AWS Account To reopen your AWS account, contact AWS Support. If you choose to reopen your account, you can access retained content and AWS services that were active before account closure. Note that you might incur charges for running these AWS services during the Post-Closure Period. Use the AWS Pricing Calculator to estimate these costs.\nAfter the Post-Closure Period Once the Post-Closure Period ends, AWS permanently closes your AWS account. Any undeleted content will be permanently deleted, and any active AWS services will be stopped. Service attributes necessary for billing and administration purposes may be retained.\nPlease note that you cannot create a new AWS account using the same alias or email address that was registered to your closed AWS account.\nHow to Close Your AWS Account Minimum Permissions To perform the following steps, you must have at least the following IAM permissions:\n You must sign in as the AWS account root user, which requires no additional IAM permissions. You can\u0026rsquo;t perform these steps as an IAM user or role.  Review Considerations before Closing Your AWS Account   Sign in as the root user of the account you want to close, using the email address and password associated with the account. Note that signing in as an AWS Identity and Access Management (IAM) user or role will not allow you to close an account.\n  On the navigation bar in the upper-right corner, select your account name (or alias), and then choose \u0026ldquo;Account.\u0026rdquo;\n  Scroll to the end of the Account page to the \u0026ldquo;Close Account\u0026rdquo; section. Make sure you read and understand the text next to the check boxes. Once you close an AWS account, you will no longer have access to AWS services using that account.\n  Select the check boxes to accept the terms, and then choose \u0026ldquo;Close Account.\u0026rdquo;\n  In the confirmation box, choose \u0026ldquo;Close Account.\u0026rdquo;\n  Accessing Your AWS Account after Closure After closing an AWS account, you will no longer have access to AWS services using that account. However, during the 90-day period following account closure (known as the Post-Closure Period), you can:\n View past billing information for your AWS account. Access AWS Support.  During the Post-Closure Period, AWS may retain any content you didn\u0026rsquo;t delete and any active AWS services. To access remaining content or AWS services, you can reopen your account within the Post-Closure Period.\nReopening Your AWS Account To reopen your AWS account, contact AWS Support. If you choose to reopen your account, you can access retained content and AWS services that were active before account closure. Note that you might incur charges for running these AWS services during the Post-Closure Period. Use the AWS Pricing Calculator to estimate these costs.\nAfter the Post-Closure Period Once the Post-Closure Period ends, AWS permanently closes your AWS account. Any undeleted content will be permanently deleted, and any active AWS services will be stopped. Service attributes necessary for billing and administration purposes may be retained.\nPlease note that you cannot create a new AWS account using the same alias or email address that was registered to your closed AWS account.\n"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]